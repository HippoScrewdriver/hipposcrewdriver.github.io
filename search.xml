<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>/2023/03/20/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>thisnewBlog</title>
    <url>/2023/03/20/hiasdfa/</url>
    <content><![CDATA[<p>make something here</p>
]]></content>
  </entry>
  <entry>
    <title>thisnewBlog</title>
    <url>/2023/03/20/thisnewBlog/</url>
    <content><![CDATA[<h3 id="this-is-the-new-Blog’s-title"><a href="#this-is-the-new-Blog’s-title" class="headerlink" title="this is the new Blog’s title"></a>this is the new Blog’s title</h3><p>let’s try different mode<br>so what about the code <code>hi code</code><br>and there are <em>italic</em><br>also <strong>blod</strong><br>hahahh end!<br>what about list?</p>
<ol>
<li>asdfad</li>
<li>asdfadf<br> *sfasd<br>*asdf</li>
</ol>
]]></content>
  </entry>
  <entry>
    <title>从零开始用Hexo建站的历程</title>
    <url>/2023/03/22/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%94%A8Hexo%E5%BB%BA%E7%AB%99%E7%9A%84%E5%8E%86%E7%A8%8B/</url>
    <content><![CDATA[<h2 id="我是如何开始的❗️❓"><a href="#我是如何开始的❗️❓" class="headerlink" title="我是如何开始的❗️❓"></a>我是如何开始的❗️❓</h2><p>关于个人博客，不同于其他社交媒体，我一直很想创建一个既能让我尝试摸索前端开发，又可以浓缩生活的个人空间。于是在winter quarter结束后，我开始在网上浏览一些“小白创建个人网站”的帖子来寻找头绪。当然，现今自动创建网页的工具很多，比如Wordpress，但如我所说，比起炫酷fancy的页面，这个简单的个人博客的目的更多是学习。</p>
<p>于是我从一篇知乎文章<a href="https://www.zhihu.com/question/22197688">“如何自己搭建一个个人网站”</a>开始入手。本文采用<strong>Hexo</strong>博客框架（当然也是一个捷径啦，在基本熟悉网站结构后我会继续研究Hexo的具体原理），部署在<strong>github</strong>上，<del>采用<strong>MiHoYo</strong>的主题框架（有点二次元但很简洁！），并且使用无后端的<strong>Valine</strong>（在考虑换成包含后端的Waline）作为评论系统。</del><br>现在改成了nexT主题，因为这个主题更加成熟也有更多拓展空间。</p>
<p>这篇文章的内容大部分来源于大佬的介绍，我只是根据自己的建站历程进行整理。中间有些部分和原文章不完全一样，是因为我在过程中遇到了更多问题   ，这些解决办法将包含在文章中。</p>
<hr>
<h2 id="创建git仓库，配置，和安装："><a href="#创建git仓库，配置，和安装：" class="headerlink" title="创建git仓库，配置，和安装："></a>创建git仓库，配置，和安装：</h2><ol>
<li><p>首先！创建你的github仓库，这个仓库就是储存你网站信息的。仓库名称需为固定写法：<strong>username.github.io</strong></p>
</li>
<li><p>在git安装运行正常的基础上进行配置，我使用的是mac，因此在terminal设置git的配置信息</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;github的username&quot;</span></span><br><span class="line">git config --global user.email <span class="string">&quot;github的注册邮箱&quot;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>配置成功后，我们需要通过以下命令生成ssh key文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">1ssh-keygen -t rsa -C <span class="string">&quot;github的注册邮箱&quot;</span></span><br></pre></td></tr></table></figure>
<p>在这里可以先不设置密码，直接回车。<br>完成后我们会在隐藏文件夹<code>.ssh</code>中找到两个文件：<code>id_rsa</code>和<code>id_rsa.pub</code>，复制<code>id_rsa.pub</code>文件里的所有内容，然后将你复制的key粘贴到github中。</p>
<p>在我正在使用的github页面中，ssh key粘贴的位置如下：</p>
<ul>
<li>选择Settings</li>
<li>左侧边栏SSH and GPG keys</li>
<li>然后添加你的SSH keys，命名并且记得增加权限。</li>
</ul>
</li>
<li><p>等我在另一台设备上重新设置再继续写，现在因为已经设置过了，操作的结果和最初不一样。</p>
</li>
</ol>
]]></content>
      <tags>
        <tag>建站</tag>
        <tag>学习</tag>
      </tags>
  </entry>
  <entry>
    <title>Markdown写作的入门常用语法</title>
    <url>/2023/03/22/markDownPractice/</url>
    <content><![CDATA[<h2 id="初识Markdown语言🌟"><a href="#初识Markdown语言🌟" class="headerlink" title="初识Markdown语言🌟"></a>初识Markdown语言🌟</h2><blockquote>
<p>前言：我第一次对Markdown语言</p>
</blockquote>
]]></content>
      <tags>
        <tag>建站</tag>
        <tag>学习</tag>
        <tag>Markdown</tag>
      </tags>
  </entry>
</search>
